// Generated by view binder compiler. Do not edit!
package com.example.linklauncher.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.linklauncher.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemHistoryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView btnDelete;

  @NonNull
  public final TextView tvTime;

  @NonNull
  public final TextView tvUa;

  @NonNull
  public final TextView tvUrl;

  private ItemHistoryBinding(@NonNull LinearLayout rootView, @NonNull TextView btnDelete,
      @NonNull TextView tvTime, @NonNull TextView tvUa, @NonNull TextView tvUrl) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.tvTime = tvTime;
    this.tvUa = tvUa;
    this.tvUrl = tvUrl;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDelete;
      TextView btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.tvTime;
      TextView tvTime = ViewBindings.findChildViewById(rootView, id);
      if (tvTime == null) {
        break missingId;
      }

      id = R.id.tvUa;
      TextView tvUa = ViewBindings.findChildViewById(rootView, id);
      if (tvUa == null) {
        break missingId;
      }

      id = R.id.tvUrl;
      TextView tvUrl = ViewBindings.findChildViewById(rootView, id);
      if (tvUrl == null) {
        break missingId;
      }

      return new ItemHistoryBinding((LinearLayout) rootView, btnDelete, tvTime, tvUa, tvUrl);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
